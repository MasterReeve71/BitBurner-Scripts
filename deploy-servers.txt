/////////////////////////////////////////////////////////////////////////////////////////
// This script deploys 4GB servers on which to run 'aucohacker.js' and should only be  //
// run that one time -- afterwards, use the 'upgrade-servers.js' script to upgrade the //
// existing autohacker servers as needed.                                              //
//                                                                                     //
// The script then copies 'autohacker.js' to each of the just-purchased autohacker     //
// servers and executes it. If there are more target servers than there are autohacker //
// servers, this script 'stacks' the target servers that have the lowest security      //
// levels together into the same autohacker servers, so that the ones with the higher  //
// security levels get more attention from 'autohacker.js' when it is run.             //
/////////////////////////////////////////////////////////////////////////////////////////
export async function main(ns)
{ const allsrv=['n00dles','foodnstuff','sigma-cosmetics','joesguns','nectar-net','hong-fang-tea','harakiri-sushi','neo-net','zer0','max-hardware','iron-gym','phantasy','silver-helix','omega-net','crush-fitness','johnson-ortho','the-hub','computek','netlink','rothman-uni','catalyst','summit-uni','rho-construction','millenium-fitness','aevum-police','alpha-ent','syscore','lexo-corp','snap-fitness','global-pharm','applied-energetics','unitalife','univ-energy','nova-med','zb-def','zb-institute','vitalife','titan-labs','solaris','microdyne','helios','deltaone','icarus','zeus-med','omnia','defcomm','galactic-cyber','infocomm','taiyang-digital','stormtech','aerocorp','clarkinc','omnitek','nwo','4sigma','blade','b-and-a','ecorp','fulcrumtech','megacorp','kuai-gong','fulcrumassets','powerhouse-fitness'];
  const srv=['srv01','srv02','srv03','srv04','srv05','srv06','srv07','srv08','srv09','srv10','srv11','srv12','srv13','srv14','srv15','srv16','srv17','srv18','srv19','srv20','srv21','srv22','srv23'];
  const srvRAM=4;
  var list = [];
  for (var i=0; i<allsrv.length; i++)
  { if (ns.getServerMaxRam(allsrv[i])<1)
  	{ if (ns.getServerMaxMoney(allsrv[i])>0)
      { list.push(allsrv[i]);
      }
	  }
  }
  await ns.sleep(100);
  for (var i=0; i<list.length; i++)
  { for (var j=i+1; j<list.length; j++)
    { if (ns.getServerMinSecurityLevel(list[i])>ns.getServerMinSecurityLevel(list[j]))
      { var temp=list[i];
        list[i]=list[j];
        list[j]=temp;
      }
    }
  }
  await ns.sleep(100);
  const srvCost=ns.getPurchasedServerCost(srvRAM)*(srv.length);
  if (ns.getServerMoneyAvailable('home')>srvCost)
  { var overage=list.length-srv.length;
    for (var i=0; i<srv.length; i++)
    { ns.purchaseServer(srv[i],srvRAM);
    }
    const hackProg='autohacker.js';  
    const progRAM=ns.getScriptRam(hackProg);
    const threads=Math.floor(srvRAM/progRAM);
    var x=0;    
    for (var i=0; i<srv.length; i++)
    { await ns.scp(hackProg,srv[i]);
      var target=['a','b','c','d'];
      if (overage>2)
      { target[0]=list[x];
        target[1]=list[x+1];
        target[2]=list[x+2];
        target[3]=list[x+3];
        overage=overage-3;
        x=x+4;
      }
      else if (overage>1)
      { target[0]=list[x];
        target[1]=list[x+1];
        target[2]=list[x+2];
        target[3]=list[x+2];
        overage=overage-2;
        x=x+3;
      }
      else if (overage>0)
      { target[0]=list[x];
        target[1]=list[x+1];
        target[2]=list[x+1];
        target[3]=list[x+1];
        overage=overage-1;
        x=x+2;
      }
      else //if overage = 0
      { target[0]=list[x];
        target[1]=list[x];
        target[2]=list[x];
        target[3]=list[x];
        x++
      }
      await ns.exec(hackProg,srv[i],threads,target[0],target[1],target[2],target[3]);        
    }
  }
  else
  { ns.tprint('NOT ENOUGH CASH! NEED ',ns.nFormat(srvCost,'$0.000a'));
  }
  await ns.sleep(1000);
}