export async function main(ns) {
  await ns.disableLog('ALL');

  const host = [ns.args[0], ns.args[1], ns.args[2], ns.args[3]];
  const targetCash = [(ns.getServerMaxMoney(host[0])) * 0.85, (ns.getServerMaxMoney(host[1])) * 0.85, (ns.getServerMaxMoney(host[2])) * 0.85, (ns.getServerMaxMoney(host[3])) * 0.85];
  const targetSec = [(ns.getServerMinSecurityLevel(host[0]) * 1.25), (ns.getServerMinSecurityLevel(host[1]) * 1.25), (ns.getServerMinSecurityLevel(host[2]) * 1.25), (ns.getServerMinSecurityLevel(host[3]) * 1.25)];

  var hacking = false;

  while (true) {
    for (var i = 0; i < 4; i++) {
      if (ns.hasRootAccess(host[i])) {
        const mySkill = await ns.getHackingLevel();
        const security = await ns.getServerSecurityLevel(host[i]);
        const money = await ns.getServerMoneyAvailable(host[i]);
        const level = await ns.getServerRequiredHackingLevel(host[i]);

        if (!hacking) {
          if (mySkill >= level) {
            hacking = true;
            await ns.toast('hack(' + host[i] + '): STARTED', 'info', 5000);
          }
        }

        if (security > targetSec[i] && level <= mySkill) {
          await ns.weaken(host[i]);
        }
        else if (money < targetCash[i] && level <= mySkill) {
          await ns.grow(host[i]);
        }
        else {
          if (level <= mySkill) {
            const earnings = await ns.hack(host[i]);
            if (earnings > 0) {
              await ns.toast('hack(' + host[i] + '): ' + ns.nFormat(earnings, "$0a"), 'success', 2000);
            }
          }
        }
      }
      await ns.sleep(500);
    }
  }
}